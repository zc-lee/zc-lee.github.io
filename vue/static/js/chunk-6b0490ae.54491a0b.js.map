{"version":3,"sources":["webpack:///./src/views/vue/keep-alive/info.vue?da0b","webpack:///src/views/vue/keep-alive/info.vue","webpack:///./src/views/vue/keep-alive/info.vue?ccb9","webpack:///./src/views/vue/keep-alive/info.vue","webpack:///./src/views/vue/keep-alive/info.vue?37c1"],"names":["render","_vm","this","_h","$createElement","_c","_self","_l","v","i","key","_v","_s","staticRenderFns","name","data","infos","mounted","console","log","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAMJ,EAAIM,GAAIN,EAAS,OAAE,SAASO,EAAEC,GAAG,OAAOJ,EAAG,IAAI,CAACK,IAAID,GAAG,CAACR,EAAIU,GAAGV,EAAIW,GAAGJ,SAAQ,IACnLK,EAAkB,GCMtB,GACEC,KAAM,mBACNC,KAFF,WAGI,MAAO,CACLC,MAAO,CACb,0DACA,WACA,mBACA,+CACA,oEACA,mCACA,KACA,4BACA,uCACA,yCACA,2EACA,mCACA,+BACA,0EACA,wCACA,6BACA,oBACA,8CACA,8CACA,4BACA,+CACA,uBACA,yEACA,uBACA,+CACA,iDACA,4BACA,gDACA,uBACA,0EACA,qBACA,iCACA,gDACA,yDACA,KACA,qDACA,kGACA,yEACA,uEACA,qCACA,mGACA,kEACA,KACA,sBACA,uGACA,uGACA,+EACA,mFACA,eACA,8BACA,gCACA,gBACA,qBACA,2BACA,0BACA,iBACA,kCACA,kBACA,6BACA,6BACA,gCACA,0BACA,+CACA,oBACA,kBACA,2CACA,iCACA,2BACA,iCACA,qBACA,+BACA,qDACA,uCACA,gEACA,8BACA,oBACA,mBACA,2CACA,iCACA,2BACA,iCACA,qBACA,+BACA,qDACA,uCACA,gEACA,8BACA,oBACA,mBACA,gDACA,KACA,uEACA,YAIEC,QArGF,WAsGIC,QAAQC,IAAI,sBC7G4V,I,wBCQxWC,EAAY,eACd,EACApB,EACAa,GACA,EACA,KACA,WACA,MAIa,aAAAO,E,oECnBf","file":"static/js/chunk-6b0490ae.54491a0b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._l((_vm.infos),function(v,i){return _c('p',{key:i},[_vm._v(_vm._s(v))])}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <p v-for=\"(v,i) in infos\" :key=\"i\">{{ v }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"VueKeepAliveInfo\",\n  data() {\n    return {\n      infos: [\n        \"        keep-alive 是 Vue 内置的一个组件，可以使被包含的组件保留状态，或避免重新渲染。\",\n        \"        \",\n        \"        1、Props:\",\n        \"          include - 字符串或正则表达式。只有名称匹配的组件会被缓存。\",\n        \"          exclude - 字符串或正则表达式。任何名称匹配的组件都不会被缓存。exclude优先级大于include\",\n        \"          max - 数字。最多可以缓存多少组件实例。\",\n        \"  \",\n        \"        2、结合router，缓存部分页面\",\n        \"          使用$route.meta的keepAlive属性：\",\n        \"             <keep-alive></keep-alive>\",\n        '               <router-view v-if=\"$route.meta.keepAlive\"> </router-view>',\n        \"              所有路径匹配到的视图组件都会被缓存！\",\n        \"               </keep-alive>\",\n        '             <router-view v-if=\"!$route.meta.keepAlive\"> </router-view>',\n        \"          需要在router中设置router的元信息meta：\",\n        \"            //...router.js\",\n        \"                {\",\n        \"                  name: 'vue-keepAlive-eg',\",\n        \"                  path: '/vue/routerView/',\",\n        \"                  meta: {\",\n        \"                    keepAlive: true // 不需要缓存\",\n        \"                  },\",\n        \"                  component: () => import('@/views/vue/keep-alive/eg')\",\n        \"                }, {\",\n        \"                  name: 'vue-keepAlive-eg1',\",\n        \"                  path: '/vue/routerView/eg1',\",\n        \"                  meta: {\",\n        \"                    keepAlive: false // 不需要缓存\",\n        \"                  },\",\n        \"                  component: () => import('@/views/vue/keep-alive/eg1')\",\n        \"                },\",\n        \"          使用效果，以上面router的代码为例：\",\n        \"            (1) 在eg页面输入框输入“asd”，然后手动跳转到eg1页面；\",\n        '            (2) 回到eg页面发现之前输入的\"asd\"依然保留，说明页面信息成功保存在内存中；',\n        \"  \",\n        \"        3、keep-alive生命周期钩子函数：activated、deactivated\",\n        \"          使用keep-alive会将数据保留在内存中，如果要在每次进入页面的时候获取最新的数据，需要在activated阶段获取数据，承担原来created钩子中获取数据的任务。\",\n        \"          被包含在 keep-alive 中创建的组件，会多出两个生命周期的钩子: activated 与 deactivated\",\n        \"            activated：在组件被激活时调用，在组件第一次渲染时也会被调用，之后每次keep-alive激活时被调用。\",\n        \"            deactivated：在组件被停用时调用。\",\n        \"          注意：只有组件被 keep-alive 包裹时，这两个生命周期才会被调用，如果作为正常组件使用，是不会被调用，以及在 2.1.0 版本之后，使用 exclude 排除之后，\",\n        \"          就算被包裹在 keep-alive 中，这两个钩子依然不会被调用！另外在服务端渲染时此钩子也不会被调用的。\",\n        \"  \",\n        \"          什么时候获取数据？\",\n        \"            当引入keep-alive 的时候，页面第一次进入，钩子的触发顺序creat…ted，退出时触发deactivated。当再次进入（前进或者后退）时，只触发activated。\",\n        \"            我们知道 keep-alive 之后页面模板第一次初始化解析变成HTML片段…在重新解析而是读取内存中的数据，即，只有当数据变化时，才使用VirtualDOM进行diff更新。\",\n        \"          故，页面进入的数据获取应该在activated中也放一份。数据下载完毕手动操作DOM的部分也应该在activated中执行才会生效。\",\n        \"            所以，应该activated中留一份数据获取的代码，或者不要created部分，直接将created中的代码转移到activated中。\",\n        \"            \",\n        \"        4、使用 router.meta 拓展\",\n        \"          假设这里有 3 个路由： A、B、C。\",\n        \"          需求：\",\n        \"            默认显示 A\",\n        \"            B 跳到 A，A 不刷新\",\n        \"            C 跳到 A，A 刷新\",\n        \"          实现方式\",\n        \"            在 A 路由里面设置 meta 属性：\",\n        \"              {\",\n        \"                path: '/',\",\n        \"                name: 'A',\",\n        \"                component: A,\",\n        \"                meta: {\",\n        \"                    keepAlive: true // 需要被缓存\",\n        \"                }\",\n        \"              }\",\n        \"            在 B 组件里面设置 beforeRouteLeave：\",\n        \"              export default {\",\n        \"                data() {\",\n        \"                    return {};\",\n        \"                },\",\n        \"                methods: {},\",\n        \"                beforeRouteLeave(to, from, next) {\",\n        \"                    // 设置下一个路由的 meta\",\n        \"                    to.meta.keepAlive = true;  // 让 A 缓存，即不刷新\",\n        \"                    next();\",\n        \"                }\",\n        \"              };\",\n        \"            在 C 组件里面设置 beforeRouteLeave：\",\n        \"              export default {\",\n        \"                data() {\",\n        \"                    return {};\",\n        \"                },\",\n        \"                methods: {},\",\n        \"                beforeRouteLeave(to, from, next) {\",\n        \"                    // 设置下一个路由的 meta\",\n        \"                    to.meta.keepAlive = false; // 让 A 不缓存，即刷新\",\n        \"                    next();\",\n        \"                }\",\n        \"              };\",\n        \"            这样便能实现 B 回到 A，A 不刷新；而 C 回到 A 则刷新。\",\n        \"  \",\n        \"        5、vue实现前进刷新，后退不刷新 https://juejin.cn/post/6844903555657269261\",\n        \"      \"\n      ]\n    };\n  },\n  mounted() {\n    console.log(\"vueKeepAliveBase\");\n  }\n};\n</script>\n<style  scoped>\nbutton {\n  margin: 15px;\n}\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./info.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./info.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./info.vue?vue&type=template&id=463fd268&scoped=true&\"\nimport script from \"./info.vue?vue&type=script&lang=js&\"\nexport * from \"./info.vue?vue&type=script&lang=js&\"\nimport style0 from \"./info.vue?vue&type=style&index=0&id=463fd268&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"463fd268\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./info.vue?vue&type=style&index=0&id=463fd268&scoped=true&lang=css&\""],"sourceRoot":""}